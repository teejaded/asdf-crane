#!/usr/bin/env bash

set -euo pipefail

[ -z "${ASDF_INSTALL_TYPE+x}" ] && echo "ASDF_INSTALL_TYPE is required" && exit 1
[ -z "${ASDF_INSTALL_VERSION+x}" ] && echo "ASDF_INSTALL_VERSION is required" && exit 1
[ -z "${ASDF_INSTALL_PATH+x}" ] && echo "ASDF_INSTALL_PATH is required" && exit 1

install() {
  local install_type=$1
  [ "$install_type" != "version" ] && echo "install type, $install_type, is not supported" && exit 1

  local version=$2
  local install_path=$3

  local bin_install_path="$install_path/bin"
  local bin_path="${bin_install_path}/crane"

  if [ "$TMPDIR" = "" ]; then
    local tmp_download_dir=$(mktemp -d -t crane_XXXXXX)
  else
    local tmp_download_dir=$TMPDIR
  fi

  local download_path="$tmp_download_dir/go-containerregistry.tar.gz"

  local download_url
  download_url="https://github.com/google/go-containerregistry/releases/download/v${version}/go-containerregistry_$(uname)_$(uname -m).tar.gz"

  mkdir -p "${bin_install_path}"

  echo "Downloading crane from ${download_url} to ${download_path}"
  curl -f -Lo $download_path $download_url

  echo "Extracting crane archive"
  unarchive "$download_path" "$tmp_download_dir"

  echo "Creating bin directory"
  mkdir -p "${bin_install_path}"

  echo "Cleaning previous binaries"
  rm -f $binary_path 2>/dev/null || true

  echo "Copying binary"
  cp "${tmp_download_dir}/crane" ${binary_path}
  chmod +x ${binary_path}
}

unarchive() {
  local archive_path="$1"
  local dest_dir="$2"

  if [[ "$archive_path" =~ "zip" ]]; then
    unzip "$archive_path" -d $dest_dir
    return
  fi

  if [[ "$archive_path" =~ "tar.gz" ]]; then
    tar -xzf "$archive_path" --directory $dest_dir
    return
  fi

  echo "Unknown archive type"
  exit 1
}

install "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"

